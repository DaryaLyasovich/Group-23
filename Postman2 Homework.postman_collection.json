{
	"info": {
		"_postman_id": "d31e0d57-b066-49d2-bfd3-cd35277cc5da",
		"name": "Postman2 Homework",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "first",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"check name\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(\"Daria\");\r",
							"});\r",
							"\r",
							"pm.test(\"check age\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(\"23\");\r",
							"});\r",
							"pm.test(\"check salary\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(20000);\r",
							"});\r",
							"\r",
							"var body = pm.request.body.formdata; //получаем body request\r",
							"\r",
							"pm.test(\"test eq body name\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(body.get('name'));\r",
							"});\r",
							"\r",
							"pm.test(\"test eq body age\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(body.get('age'));\r",
							"});\r",
							"\r",
							"pm.test(\"test eq body salary\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(Number(body.get('salary')));\r",
							"});\r",
							"\r",
							"console.log(jsonData.family);\r",
							"\r",
							"pm.test(\"test u_salary_1_5_year\", function () {\r",
							"    pm.expect(jsonData.family.u_salary_1_5_year).to.eql(body.get('salary')*4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Daria",
							"type": "text"
						},
						{
							"key": "age",
							"value": "23",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "20000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"var query = pm.request.url.query;\r",
							"\r",
							"\r",
							"pm.test(\"test eq body name1\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(query.get('name'));\r",
							"});\r",
							"\r",
							"pm.test(\"test eq body age1\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(query.get('age'));\r",
							"});\r",
							"\r",
							"pm.test(\"test eq body salary1\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(Number(query.get('salary')));\r",
							"});\r",
							"\r",
							"console.log(jsonData.family)\r",
							"\r",
							"pm.test(\"dog has name\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog.hasOwnProperty('name')).to.eql(true);\r",
							"});\r",
							"\r",
							"pm.test(\"dog has age\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog.hasOwnProperty('age')).to.eql(true);\r",
							"});\r",
							"\r",
							"pm.test(\"dog name is Luky\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog.name).to.eql(\"Luky\");\r",
							"});\r",
							"\r",
							"pm.test(\"dog age is 4\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog.age).to.eql(4);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Daria&age=23&salary=30000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Daria"
						},
						{
							"key": "age",
							"value": "23"
						},
						{
							"key": "salary",
							"value": "30000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"var query = pm.request.url.query;\r",
							"\r",
							"pm.test(\"test eq body name2\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(query.get('name'));\r",
							"});\r",
							"\r",
							"pm.test(\"test eq body age2\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(Number(query.get('age')));\r",
							"});\r",
							"console.log(jsonData.salary);\r",
							"\r",
							"console.log(query.get(\"salary\"));\r",
							"\r",
							"console.log(jsonData.salary[0]);\r",
							"\r",
							"console.log(jsonData.salary[1]);\r",
							"\r",
							"console.log(jsonData.salary[2]);\r",
							"\r",
							"pm.test(\"test 0 param\", function () {\r",
							"    pm.expect(jsonData.salary[0]).to.eql(Number(query.get('salary')));\r",
							"});\r",
							"\r",
							"pm.test(\"test 1 param\", function () {\r",
							"    pm.expect(Number(jsonData.salary[1])).to.eql(Number(query.get('salary'))*2);\r",
							"});\r",
							"\r",
							"pm.test(\"test 2 param\", function () {\r",
							"    pm.expect(Number(jsonData.salary[2])).to.eql(Number(query.get('salary'))*3);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"name\",query.get('name'));\r",
							"\r",
							"pm.environment.set(\"age\",query.get('age'));\r",
							"\r",
							"pm.environment.set(\"salary\",query.get('salary'));\r",
							"\r",
							"for (var item of jsonData.salary){\r",
							"    console.log(item);\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Daria&age=23&salary=10000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Daria"
						},
						{
							"key": "age",
							"value": "23"
						},
						{
							"key": "salary",
							"value": "10000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"    var jsonData = pm.response.json();\r",
							"    \r",
							"    var body = pm.request.body.formdata; \r",
							"\r",
							"pm.test(\"test start qa salary\", function () {\r",
							"    pm.expect(jsonData.hasOwnProperty('start_qa_salary')).to.eql(true);\r",
							"});\r",
							"\r",
							"pm.test(\"test start qa salary after 6 months\", function () {\r",
							"    pm.expect(jsonData.hasOwnProperty('qa_salary_after_6_months')).to.eql(true);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_12_months\", function () {\r",
							"    pm.expect(jsonData.hasOwnProperty('qa_salary_after_12_months')).to.eql(true);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(jsonData.hasOwnProperty('qa_salary_after_1.5_year')).to.eql(true);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(jsonData.hasOwnProperty('qa_salary_after_3.5_years')).to.eql(true);\r",
							"});\r",
							"\r",
							"pm.test(\"person param\", function () {\r",
							"    pm.expect(jsonData.hasOwnProperty('person')).to.eql(true);\r",
							"});\r",
							"\r",
							"console.log(body);\r",
							"\r",
							"pm.test(\"start_qa_salary eql\", function () {\r",
							"    pm.expect(jsonData.start_qa_salary).to.eql(Number(body.get('salary')))\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_6_months eql\", function () {\r",
							"    pm.expect(jsonData.qa_salary_after_6_months).to.eql(Number(body.get('salary'))*2)\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_12_months eql\", function () {\r",
							"    pm.expect(jsonData.qa_salary_after_12_months).to.eql(Number(body.get('salary'))*2.7)\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_1.5_year eql\", function () {\r",
							"    pm.expect(jsonData['qa_salary_after_1.5_year']).to.eql(Number(body.get('salary'))*3.3)\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_3.5_years eql\", function () {\r",
							"    pm.expect(jsonData['qa_salary_after_3.5_years']).to.eql(Number(body.get('salary'))*3.8)\r",
							"});\r",
							"\r",
							"pm.test(\"[person eql salary]\", function () {\r",
							"    pm.expect(jsonData.person.u_name[1]).to.eql(Number(body.get('salary')))\r",
							"});\r",
							"\r",
							"pm.test(\"u_age eql age\", function () {\r",
							"    pm.expect(jsonData.person.u_age).to.eql(Number(body.get('age')))\r",
							"});\r",
							"\r",
							"pm.test(\"u_salary_5_years eql salary*4.2 \", function () {\r",
							"    pm.expect(jsonData.person.u_salary_5_years).to.eql(Number(body.get('salary'))*4.2)\r",
							"});\r",
							"\r",
							"for (var item in jsonData.person){\r",
							"    console.log(jsonData.person[item]);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}