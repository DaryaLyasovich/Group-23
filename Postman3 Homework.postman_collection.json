{
	"info": {
		"_postman_id": "641eefc9-3738-4ca7-bca1-9f2711d73fab",
		"name": "Postman3 Homework",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"token\",pm.response.json().token);\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "login",
							"value": "CandyShop",
							"type": "text"
						},
						{
							"key": "password",
							"value": "1234",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/login",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"    var jsonData = pm.response.json();\r",
							"\r",
							"var schema = {\r",
							"        \"type\": \"object\",\r",
							"        \"required\":[\"person\", \"qa_salary_after_12_months\",\"qa_salary_after_6_months\", \"start_qa_salary\"],\r",
							"        \"properties\": {\r",
							"            \"person\":{\r",
							"                \"type\": \"object\",\r",
							"                \"required\": ['u_age', 'u_name', 'u_salary_1_5_year'],\r",
							"                \"properties\": {\r",
							"                    \"u_age\": \"integer\",\r",
							"                    \"u_name\":\"array\",\r",
							"                    \"u_salary_1_5_year\": \"integer\"\r",
							"                }\r",
							"            },\r",
							"            \"qa_salary_after_12_months\": {\"type\": \"number\"},\r",
							"            \"qa_salary_after_6_months\": {\"type\": \"integer\"},\r",
							"            \"start_qa_salary\": {\"type\": \"integer\"},\r",
							"        }\r",
							"    }\r",
							"\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
							"});\r",
							"\r",
							"var body = JSON.parse(pm.request.body.raw); //получаем body request\r",
							"\r",
							"pm.test(\"test qa_salary_after_12_months\", function () {\r",
							"    pm.expect(jsonData.qa_salary_after_12_months).to.eql(body.salary*2.9);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_6_months\", function () {\r",
							"    pm.expect(jsonData.qa_salary_after_6_months).to.eql(body.salary*2);\r",
							"});\r",
							"\r",
							"pm.test(\"start_qa_salary\", function () {\r",
							"    pm.expect(jsonData.start_qa_salary).to.eql(body.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"u_salary_1_5_year\", function () {\r",
							"    pm.expect(jsonData.person.u_salary_1_5_year).to.eql(body.salary*4);\r",
							"});\r",
							"\r",
							"pm.environment.set('salary',jsonData.person.u_salary_1_5_year);\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"age\":{{age}},\r\n    \"salary\":{{salary}},\r\n    \"name\":\"{{name}}\",\r\n    \"auth_token\":\"{{token}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "new_data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"var schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"required\":[\"age\", \"name\",\"salary\"],\r",
							"    \"properties\": {\r",
							"        \"age\":{\"type\": \"integer\"},\r",
							"        \"name\": {\"type\": \"string\"},\r",
							"        \"salary\": {\"type\": \"array\"},\r",
							"    }\r",
							"}\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
							"});\r",
							"\r",
							"var body = pm.request.body.formdata; //получаем body request\r",
							"\r",
							"console.log(body);\r",
							"\r",
							"pm.test(\"test salary\", function () {\r",
							"    pm.expect(Number(jsonData.salary[1])).to.eql(body.get('salary')*2);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary2\", function () {\r",
							"    pm.expect(Number(jsonData.salary[2])).to.eql(body.get('salary')*3);\r",
							"});\r",
							"\r",
							"pm.test(\"2nd element\", function () {\r",
							"    pm.expect(Number(jsonData.salary[2])).to.greaterThan(jsonData.salary[0]);\r",
							"    pm.expect(Number(jsonData.salary[2])).to.greaterThan(Number(jsonData.salary[1]));\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/new_data",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"new_data"
					]
				}
			},
			"response": []
		},
		{
			"name": "test_pet_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"var schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"required\":[\"age\", \"name\",\"daily_food\",\"daily_sleep\"],\r",
							"    \"properties\": {\r",
							"        \"age\":{\"type\": \"integer\"},\r",
							"        \"name\": {\"type\": \"string\"},\r",
							"        \"daily_food\": {\"type\": \"number\"},\r",
							"        \"daily_sleep\": {\"type\": \"number\"},\r",
							"    }\r",
							"}\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
							"});\r",
							"\r",
							"var body = pm.request.body.formdata; //получаем body request\r",
							"\r",
							"console.log(body);\r",
							"\r",
							"pm.test(\"test weight1\", function () {\r",
							"    pm.expect(jsonData.daily_food).to.eql(body.get('weight')*0.012);\r",
							"});\r",
							"\r",
							"pm.test(\"test weight2\", function () {\r",
							"    pm.expect(jsonData.daily_sleep).to.eql(body.get('weight')*2.5);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "6",
							"type": "text"
						},
						{
							"key": "weight",
							"value": "5",
							"type": "text"
						},
						{
							"key": "name",
							"value": "pet",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/test_pet_info",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"test_pet_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_test_user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"var schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"required\":[\"age\", \"family\",\"name\",\"salary\"],\r",
							"    \"properties\": {\r",
							"        \"age\":{\"type\": \"string\"},\r",
							"        \"name\": {\"type\": \"string\"},\r",
							"        \"salary\": {\"type\": \"integer\"},\r",
							"        \"family\": {\r",
							"            \"type\": \"object\", \"required\":[\"children\", \"u_salary_1_5_year\"],\r",
							"    \"properties\": {\r",
							"        \"children\":{\"type\":\"array\"}, \r",
							"        \"u_salary_1_5_year\":{\"type\":\"integer\"}\r",
							"    }\r",
							"        \r",
							"        },\r",
							"\r",
							"    }\r",
							"}\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Check name\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(pm.environment.get('name'));\r",
							"});\r",
							"\r",
							"pm.test(\"Check age\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(pm.request.body.formdata.get('age'));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/get_test_user",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"get_test_user"
					]
				}
			},
			"response": []
		},
		{
			"name": "currency",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var randomIndex = Math.floor(Math.random() * jsonData.length);\r",
							"pm.environment.set('Cur_ID', jsonData[randomIndex].Cur_ID);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/currency",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"currency"
					]
				}
			},
			"response": []
		},
		{
			"name": "curr_byn",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"var schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"required\":[\"Cur_Abbreviation\", \"Cur_ID\",\"Cur_Name\",\"Cur_OfficialRate\",\"Cur_Scale\",\"Date\"],\r",
							"    \"properties\": {\r",
							"        \"Cur_Abbreviation\":{\"type\": \"string\"},\r",
							"        \"Cur_ID\": {\"type\": \"integer\"},\r",
							"        \"Cur_Name\": {\"type\": \"string\"},\r",
							"        \"Cur_OfficialRate\": {\"type\": \"number\"},\r",
							"        \"Cur_Scale\": {\"type\": \"integer\"},\r",
							"        \"Date\": {\"type\": \"string\"},\r",
							"        },\r",
							"\r",
							"    }\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						},
						{
							"key": "curr_code",
							"value": "{{Cur_ID}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/curr_byn",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"curr_byn"
					]
				}
			},
			"response": []
		},
		{
			"name": "home***",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resp = pm.response.json();\r",
							"\r",
							"for(let item of resp){\r",
							"    let newRequest = {\r",
							"        url: 'http://162.55.220.72:5005/curr_byn',\r",
							"        method: \"POST\",\r",
							"        body: {\r",
							"            mode: 'formdata',\r",
							"            formdata: [\r",
							"                {key: 'auth_token', value: pm.environment.get('token')},\r",
							"                {key: 'curr_code', value: item.Cur_ID.toString()}\r",
							"            ]\r",
							"        }\r",
							"    };\r",
							"    pm.sendRequest(newRequest, (err, res) => {\r",
							"        if(res.code === 200 && res.json().hasOwnProperty('Cur_OfficialRate')){\r",
							"            console.log(res.json());\r",
							"        }\r",
							"    });\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/currency",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"currency"
					]
				}
			},
			"response": []
		}
	]
}